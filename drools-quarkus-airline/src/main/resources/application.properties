quarkus.package.jar.type=fast-jar
quarkus.log.file.enable=true
quarkus.log.file.path=flight-quarkus.log
quarkus.container-image.builder=openshift

quarkus.rest-client.maas-api.url=https://llama-3-2-3b-maas-apicast-production.apps.prod.rhoai.rh-aiservices-bu.com:443
quarkus.rest-client.maas-api.scope=jakarta.inject.Singleton

maas-api.api-key=442ce362a38cf8c7a18499de45942124

quarkus.rest-client.maas-api.providers=org.acme.MaasClientRequestFilter,io.quarkus.rest.client.reactive.jackson.runtime.serialisers.ClientJacksonMessageBodyReader



# Container image configuration - force internal registry
quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000
quarkus.container-image.group=default
quarkus.container-image.name=drools-quarkus-airline
quarkus.container-image.tag=1.0.0-SNAPSHOT

# Application configuration
quarkus.http.port=8080

quarkus.application.name=drools-quarkus-airline

# OpenShift configuration
quarkus.openshift.build-strategy=docker
quarkus.container-image.build=true
quarkus.openshift.route.expose=true
quarkus.openshift.add-version-to-label-selectors=false


# REST client debugging
quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=1024
quarkus.log.category."org.jboss.resteasy.reactive.client".level=DEBUG


# CORS configuration to allow frontend to access backend
quarkus.http.cors=true
quarkus.http.cors.origins=http://chatbot-ui-default.apps.cluster-v4sj7.dynamic.redhatworkshops.io,https://chatbot-ui-default.apps.cluster-v4sj7.dynamic.redhatworkshops.io
quarkus.http.cors.methods=GET,POST,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with

